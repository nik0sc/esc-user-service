{
	"info": {
		"_postman_id": "fb685a18-9a1b-4d61-ab51-cd0d37eea366",
		"name": "ESC User microservice",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Version",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/version",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"version"
					]
				},
				"description": "Get the git commit hash for the current deployment of the service."
			},
			"response": []
		},
		{
			"name": "Create User",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"dummy_user_2\",\n\t\"password\": \"Password1!\",\n\t\"long_name\": \"Dummy User 2\",\n\t\"email\": \"mail@example.com\",\n\t\"phone\": \"9234 5678\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/user",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user"
					]
				},
				"description": "Creating an existing user will fail!"
			},
			"response": []
		},
		{
			"name": "Login",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"dummy_user\",\n\t\"password\": \"Password1!\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/user/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Current User",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Parse-Session-Token",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/user/me",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"me"
					]
				},
				"description": "Use the current session token to retrieve the current user profile."
			},
			"response": []
		},
		{
			"name": "Promote User to Admin",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0739daad-27d8-47f6-bd7c-ad30749033c1",
						"exec": [
							"pm.environment.set(\"userIdent\", \"nikos\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Parse-Session-Token",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/user/{{userIdent}}/promoteToAdmin",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{userIdent}}",
						"promoteToAdmin"
					]
				},
				"description": "User holding the session token must be an admin. In other words, only an admin can promote other users to admin status.\nThe promotion is idempotent. userIdent can be either an all-digit string, in which case the ident is treated as an user id, or a mixed alnum/underscore string, in which case the ident is treated as a username."
			},
			"response": []
		},
		{
			"name": "Get User Public Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2859775e-2114-4569-a489-dff592da14aa",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "75338ab6-d1e0-43c1-9115-eefbef7b6f55",
						"exec": [
							"pm.environment.set(\"userIdent\", \"dummy_user_2\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/user/{{userIdent}}/public",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{userIdent}}",
						"public"
					]
				},
				"description": "Check if this user is an admin. No token required"
			},
			"response": []
		},
		{
			"name": "[WIP] Delete Current User",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/user/me",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"me"
					]
				},
				"description": "Delete the current user. THIS API IS A WORK IN PROGRESS!"
			},
			"response": []
		},
		{
			"name": "Create Team",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "X-Parse-Session-Token",
						"type": "text",
						"value": "{{sessionToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"team_name\": \"Dummy Team\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/team",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team"
					]
				},
				"description": "Calling user must be admin"
			},
			"response": []
		},
		{
			"name": "Add Admin to Team",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cfb29678-e4ca-414f-b493-a45705cec2b5",
						"exec": [
							"pm.environment.set(\"teamId\", \"1\");",
							"pm.environment.set(\"adminIdent\", \"dummy_user\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Parse-Session-Token",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/team/{{teamId}}/admin/{{adminIdent}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team",
						"{{teamId}}",
						"admin",
						"{{adminIdent}}"
					]
				},
				"description": "Only an admin can call this API. Only an admin can be added to a team."
			},
			"response": []
		},
		{
			"name": "Remove Admin from Team",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cfb29678-e4ca-414f-b493-a45705cec2b5",
						"exec": [
							"pm.environment.set(\"teamId\", \"1\");",
							"pm.environment.set(\"adminIdent\", \"dummy_user\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "X-Parse-Session-Token",
						"type": "text",
						"value": "{{sessionToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/team/{{teamId}}/admin/{{adminIdent}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team",
						"{{teamId}}",
						"admin",
						"{{adminIdent}}"
					]
				},
				"description": "Only an admin can call this API. Only an admin can be added to a team."
			},
			"response": []
		},
		{
			"name": "Get Current Admin's Teams",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Parse-Session-Token",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/team/me",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Team",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "X-Parse-Session-Token",
						"type": "text",
						"value": "{{sessionToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/team/{{teamId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team",
						"{{teamId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Team",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "X-Parse-Session-Token",
						"type": "text",
						"value": "{{sessionToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/team/{{teamId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team",
						"{{teamId}}"
					]
				},
				"description": "Any admin can delete any team."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6c1be67c-00cd-47ca-b3d6-d392c4cc770a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5bd2801d-a036-4a09-bf31-943cb164af54",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "43015b53-f436-4e31-baa3-a6005c783008",
			"key": "baseUrl",
			"value": "https://user-service.ticket.lepak.sg",
			"type": "string"
		}
	]
}